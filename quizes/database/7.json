[
    {
        "id": "q1",
        "text": "What is the primary role of an application program in database systems?",
        "options": [
            "To replace SQL for all database operations",
            "To act as an intermediary between users and the database",
            "To optimize database storage structures",
            "To handle database backup and recovery"
        ],
        "correctAnswer": 1,
        "explanation": "Application programs serve as intermediaries between users and databases, providing user-friendly interfaces while handling SQL operations in the background."
    },
    {
        "id": "q2",
        "text": "Which era of application architecture introduced the widespread use of personal computers connected via local area networks?",
        "options": [
            "Mainframe era (1960's-70's)",
            "Personal computer era (1980's)",
            "Web era (1990's onwards)",
            "Cloud computing era (2000's)"
        ],
        "correctAnswer": 1,
        "explanation": "The personal computer era of the 1980's featured desktop PCs connected via LANs to database servers, moving away from centralized mainframe systems."
    },
    {
        "id": "q3",
        "text": "What is a key advantage of web interfaces for database applications?",
        "options": [
            "They provide the fastest possible performance",
            "They eliminate the need for any server-side processing",
            "They enable access from anywhere without specialized software installation",
            "They offer more advanced features than native applications"
        ],
        "correctAnswer": 2,
        "explanation": "Web browsers provide ubiquitous access from anywhere without requiring users to download and install specialized software, while still offering good graphical interfaces."
    },
    {
        "id": "q4",
        "text": "What does the 'http' prefix in a URL indicate?",
        "options": [
            "The document is hypertext formatted",
            "The document should be accessed using Hyper Text Transfer Protocol",
            "The document is located on a secure server",
            "The document contains executable JavaScript code"
        ],
        "correctAnswer": 1,
        "explanation": "The 'http' prefix specifies that the document should be accessed using the Hyper Text Transfer Protocol, which is the foundation of web communication."
    },
    {
        "id": "q5",
        "text": "What is the primary purpose of HTML forms in web applications?",
        "options": [
            "To format text for better display",
            "To create hyperlinks to other documents",
            "To enable users to enter data that can be sent back to the server",
            "To execute client-side scripts for validation"
        ],
        "correctAnswer": 2,
        "explanation": "HTML forms provide input features that allow users to enter data, which can then be submitted to the server for processing by server-side applications."
    },
    {
        "id": "q6",
        "text": "What happens when a web server receives a request for a document that identifies an executable program?",
        "options": [
            "It returns an error message",
            "It sends the source code to the client",
            "It executes the program and sends back the generated HTML",
            "It prompts the user to download the executable"
        ],
        "correctAnswer": 2,
        "explanation": "When a URL identifies an executable program, the web server executes it and returns the HTML output generated by the program to the client."
    },
    {
        "id": "q7",
        "text": "What is the main characteristic of the HTTP protocol that differentiates it from database connections?",
        "options": [
            "It is connectionless and stateless",
            "It uses encryption by default",
            "It requires continuous authentication",
            "It supports only text-based content"
        ],
        "correctAnswer": 0,
        "explanation": "HTTP is connectionless and stateless - the server closes the connection after each request and doesn't retain information about previous requests, unlike persistent database connections."
    },
    {
        "id": "q8",
        "text": "What is the primary purpose of cookies in web applications?",
        "options": [
            "To store large amounts of user data on the client side",
            "To execute scripts on the client machine",
            "To maintain session information across multiple HTTP requests",
            "To improve the performance of web page loading"
        ],
        "correctAnswer": 2,
        "explanation": "Cookies are used to maintain session state and store identifying information that can be sent back to the server with subsequent requests, overcoming HTTP's stateless nature."
    },
    {
        "id": "q9",
        "text": "In servlet programming, what is the purpose of the doGet method?",
        "options": [
            "To establish database connections",
            "To handle HTTP GET requests from clients",
            "To manage session timeouts",
            "To compile JSP pages into servlets"
        ],
        "correctAnswer": 1,
        "explanation": "The doGet method in servlets is specifically designed to handle HTTP GET requests from web clients, processing parameters and generating appropriate responses."
    },
    {
        "id": "q10",
        "text": "What is the main advantage of using server-side scripting languages like JSP or PHP?",
        "options": [
            "They execute faster than client-side scripts",
            "They can directly access database servers",
            "They simplify connecting databases to the web by embedding code in HTML",
            "They eliminate the need for web servers"
        ],
        "correctAnswer": 2,
        "explanation": "Server-side scripting languages allow developers to embed executable code and SQL queries directly within HTML documents, simplifying database-driven web application development."
    },
    {
        "id": "q11",
        "text": "What is a key security benefit of client-side input validation using JavaScript?",
        "options": [
            "It provides absolute security against all input attacks",
            "It eliminates the need for server-side validation",
            "It speeds up interaction by catching errors before server round-trips",
            "It can prevent SQL injection attacks completely"
        ],
        "correctAnswer": 2,
        "explanation": "Client-side validation provides immediate feedback to users and reduces server load by catching input errors locally before making HTTP requests to the server."
    },
    {
        "id": "q12",
        "text": "In the MVC architecture, what is the primary responsibility of the controller?",
        "options": [
            "To store and manage business data",
            "To format data for display to the user",
            "To receive events and execute actions based on user input",
            "To handle database connections and queries"
        ],
        "correctAnswer": 2,
        "explanation": "In MVC architecture, the controller receives user input events, executes appropriate actions, and determines which view should be presented to the user."
    },
    {
        "id": "q13",
        "text": "What is the main purpose of the business logic layer in application architecture?",
        "options": [
            "To handle user interface rendering",
            "To manage database storage details",
            "To provide a high-level view of data and enforce business rules",
            "To optimize network communication"
        ],
        "correctAnswer": 2,
        "explanation": "The business logic layer provides abstractions of business entities and enforces business rules and workflows, hiding the complexities of data storage implementation."
    },
    {
        "id": "q14",
        "text": "What problem does object-relational mapping (ORM) primarily solve?",
        "options": [
            "It replaces SQL with object-oriented query languages",
            "It allows writing application code using object models while storing data relationally",
            "It eliminates the need for database servers",
            "It makes relational databases behave like object-oriented databases"
        ],
        "correctAnswer": 1,
        "explanation": "ORM systems bridge the gap between object-oriented application code and relational database storage by providing mapping between objects and database tuples."
    },
    {
        "id": "q15",
        "text": "What is the main difference between REST and Big Web Services approaches?",
        "options": [
            "REST uses HTTP while Big Web Services uses proprietary protocols",
            "REST is simpler and uses standard HTTP requests, while Big Web Services uses XML-based protocols",
            "REST is for internal use only while Big Web Services are for external APIs",
            "REST requires more bandwidth than Big Web Services"
        ],
        "correctAnswer": 1,
        "explanation": "REST uses standard HTTP requests to URLs and typically returns XML or JSON, while Big Web Services use XML-based protocols layered on top of HTTP for more complex operations."
    },
    {
        "id": "q16",
        "text": "What is the primary goal of Rapid Application Development (RAD) tools?",
        "options": [
            "To create the most optimized and efficient code possible",
            "To eliminate the need for programmers in application development",
            "To speed up application development through code generation and visual design",
            "To replace traditional databases with object-oriented storage"
        ],
        "correctAnswer": 2,
        "explanation": "RAD tools focus on accelerating application development through features like code generation, visual drag-and-drop interfaces, and component libraries."
    },
    {
        "id": "q17",
        "text": "What is connection pooling in the context of web server performance?",
        "options": [
            "Sharing database connections between multiple servlet requests",
            "Combining multiple network connections for faster data transfer",
            "Pooling user sessions to reduce memory usage",
            "Grouping similar database queries for batch processing"
        ],
        "correctAnswer": 0,
        "explanation": "Connection pooling maintains a pool of reusable database connections that can be shared across servlet requests, avoiding the overhead of establishing new connections for each request."
    },
    {
        "id": "q18",
        "text": "What is SQL injection and how can it be prevented?",
        "options": [
            "Injecting malicious SQL into database backups; prevent with encryption",
            "Injecting malicious code into SQL queries via user input; prevent using prepared statements",
            "Injecting database queries into web pages; prevent with input validation",
            "Injecting SQL commands into network packets; prevent with firewalls"
        ],
        "correctAnswer": 1,
        "explanation": "SQL injection occurs when attackers inject malicious SQL code through user input fields; it's best prevented by using prepared statements with parameterized queries."
    },
    {
        "id": "q19",
        "text": "What is cross-site scripting (XSS)?",
        "options": [
            "Executing scripts on one site that perform actions on another site where the user is authenticated",
            "Sharing scripts between multiple websites for better performance",
            "Using JavaScript from external domains to enhance website functionality",
            "Creating scripts that work across different web browsers"
        ],
        "correctAnswer": 0,
        "explanation": "XSS involves injecting malicious scripts into web pages viewed by other users, which can then perform actions on other sites where the user has active authentication."
    },
    {
        "id": "q20",
        "text": "What is two-factor authentication and why is it more secure than single-factor?",
        "options": [
            "Using two passwords instead of one; more secure because it's harder to guess both",
            "Requiring authentication from two different servers; more secure due to redundancy",
            "Combining something you know (password) with something you have (token); more secure against password theft",
            "Authenticating with both username and email; more secure because email is verified"
        ],
        "correctAnswer": 2,
        "explanation": "Two-factor authentication requires two different types of credentials (typically knowledge-based and possession-based), making it significantly more secure against various attack vectors."
    },
    {
        "id": "q21",
        "text": "What is the main limitation of SQL standard authorization for web applications?",
        "options": [
            "It doesn't support user authentication",
            "It only works with specific database vendors",
            "It operates at table/column level but not row level for fine-grained control",
            "It requires special hardware for implementation"
        ],
        "correctAnswer": 2,
        "explanation": "Standard SQL authorization provides coarse-grained control at the table or column level but lacks support for row-level security needed for applications like 'users can only see their own data'."
    },
    {
        "id": "q22",
        "text": "What is the purpose of audit trails in database applications?",
        "options": [
            "To optimize database query performance",
            "To track who accessed or modified data for security monitoring",
            "To create backups of database transactions",
            "To manage user authentication sessions"
        ],
        "correctAnswer": 1,
        "explanation": "Audit trails log data access and modifications, enabling security monitoring, breach detection, and forensic analysis of who performed what actions on the data."
    },
    {
        "id": "q23",
        "text": "What is the key difference between symmetric and asymmetric encryption?",
        "options": [
            "Symmetric is faster but asymmetric is more secure",
            "Symmetric uses the same key for encryption and decryption, while asymmetric uses different keys",
            "Symmetric is for databases while asymmetric is for network communication",
            "Symmetric requires special hardware while asymmetric can be software-based"
        ],
        "correctAnswer": 1,
        "explanation": "Symmetric encryption uses a single shared key for both encryption and decryption, while asymmetric encryption uses a public key for encryption and a private key for decryption."
    },
    {
        "id": "q24",
        "text": "What are salt bits used for in encryption?",
        "options": [
            "To make encryption algorithms run faster",
            "To add random data before encryption to prevent dictionary attacks",
            "To reduce the size of encrypted data",
            "To make encryption keys easier to remember"
        ],
        "correctAnswer": 1,
        "explanation": "Salt bits are random data added to values before encryption to ensure the same value encrypts differently each time, preventing dictionary attacks and frequency analysis."
    },
    {
        "id": "q25",
        "text": "What is the purpose of digital certificates in web security?",
        "options": [
            "To encrypt data transmitted between client and server",
            "To verify the authenticity of a website's public key",
            "To store user authentication credentials securely",
            "To create secure database connections"
        ],
        "correctAnswer": 1,
        "explanation": "Digital certificates are used to verify that a public key actually belongs to the claimed entity, preventing man-in-the-middle attacks by authenticating website identities."
    },
    {
        "id": "q26",
        "text": "In the three-layer web architecture, what is the role of the application server?",
        "options": [
            "To serve static HTML content to web browsers",
            "To store and manage database data",
            "To execute business logic and handle application processing",
            "To manage network routing between components"
        ],
        "correctAnswer": 2,
        "explanation": "In three-tier architecture, the application server handles business logic, processes requests, and communicates with both the web server (presentation layer) and database server (data layer)."
    },
    {
        "id": "q27",
        "text": "What is the main advantage of using prepared statements in database applications?",
        "options": [
            "They make SQL queries easier to read and maintain",
            "They automatically optimize query performance",
            "They prevent SQL injection attacks by separating code from data",
            "They allow queries to be written in programming languages instead of SQL"
        ],
        "correctAnswer": 2,
        "explanation": "Prepared statements separate SQL code from data parameters, preventing attackers from injecting malicious SQL through user input fields."
    },
    {
        "id": "q28",
        "text": "What is the purpose of the Common Gateway Interface (CGI)?",
        "options": [
            "To provide a standard interface between web servers and application programs",
            "To enable communication between different database systems",
            "To create graphical user interfaces for web applications",
            "To optimize network traffic between clients and servers"
        ],
        "correctAnswer": 0,
        "explanation": "CGI defines a standard protocol for web servers to communicate with external programs, allowing dynamic content generation based on user requests."
    },
    {
        "id": "q29",
        "text": "What is the primary benefit of using server-side sessions with cookies?",
        "options": [
            "They reduce network bandwidth usage",
            "They enable persistence of user state across multiple HTTP requests",
            "They improve database query performance",
            "They eliminate the need for user authentication"
        ],
        "correctAnswer": 1,
        "explanation": "Server-side sessions with cookies allow web applications to maintain user-specific state information across multiple stateless HTTP requests."
    },
    {
        "id": "q30",
        "text": "What is the main security concern with storing passwords in script files?",
        "options": [
            "Script files cannot contain encrypted passwords",
            "Backup or temporary files might be accessible and expose passwords",
            "Passwords in scripts are automatically visible to all users",
            "Script files require passwords to be in a specific insecure format"
        ],
        "correctAnswer": 1,
        "explanation": "Editor backup files, temporary files, or configuration files might be accessible through the web server, exposing plaintext passwords to attackers."
    },
    {
        "id": "q31",
        "text": "What is the purpose of the referer header in HTTP for security?",
        "options": [
            "To track which websites users visited before coming to your site",
            "To prevent cross-site request forgery by verifying request origin",
            "To provide information for website analytics and tracking",
            "To enable browser caching of frequently accessed resources"
        ],
        "correctAnswer": 1,
        "explanation": "The referer header can help prevent CSRF attacks by verifying that requests originated from your own site rather than malicious external sites."
    },
    {
        "id": "q32",
        "text": "What is single sign-on (SSO) and what problem does it solve?",
        "options": [
            "Using one password for all applications; solves password memorization",
            "Authenticating once to access multiple applications; reduces password exposure",
            "Signing on from one device to access all devices; simplifies access management",
            "Using biometrics instead of passwords; eliminates password theft"
        ],
        "correctAnswer": 1,
        "explanation": "SSO allows users to authenticate once and gain access to multiple applications without re-entering credentials, reducing password fatigue and exposure."
    },
    {
        "id": "q33",
        "text": "What is fine-grained authorization and why is it important?",
        "options": [
            "Authorization at the row level; important for data-specific access control",
            "Very complex password requirements; important for maximum security",
            "Authorization that expires frequently; important for dynamic environments",
            "Multi-step authorization processes; important for high-security applications"
        ],
        "correctAnswer": 0,
        "explanation": "Fine-grained authorization provides access control at the row or even cell level, essential for scenarios where users should only access their own data or specific subsets of data."
    },
    {
        "id": "q34",
        "text": "What is the main advantage of public-key encryption over symmetric encryption?",
        "options": [
            "It is significantly faster for large amounts of data",
            "It doesn't require secure distribution of secret keys",
            "It provides better encryption strength for the same key size",
            "It is easier to implement in software systems"
        ],
        "correctAnswer": 1,
        "explanation": "Public-key encryption uses a pair of keys (public and private), eliminating the need to securely distribute a shared secret key as required in symmetric encryption."
    },
    {
        "id": "q35",
        "text": "What is the purpose of challenge-response authentication?",
        "options": [
            "To make authentication more entertaining for users",
            "To avoid transmitting passwords over the network",
            "To provide backup authentication when passwords are forgotten",
            "To support authentication across different network protocols"
        ],
        "correctAnswer": 1,
        "explanation": "Challenge-response systems authenticate users without transmitting passwords by having the client prove knowledge of the password through cryptographic operations."
    },
    {
        "id": "q36",
        "text": "What is nonrepudiation in the context of digital signatures?",
        "options": [
            "The inability to deny having sent a message",
            "The prevention of message modification during transmission",
            "The protection against message interception",
            "The guarantee of message delivery to the recipient"
        ],
        "correctAnswer": 0,
        "explanation": "Nonrepudiation provided by digital signatures means the sender cannot later deny having created and sent the signed message."
    },
    {
        "id": "q37",
        "text": "What is the main purpose of certification authorities in public key infrastructure?",
        "options": [
            "To generate encryption keys for users",
            "To verify and vouch for the authenticity of public keys",
            "To store private keys securely for organizations",
            "To provide encryption services for large organizations"
        ],
        "explanation": "Certification authorities act as trusted third parties that verify the identity of key owners and issue digital certificates binding public keys to identities.",
        "correctAnswer": 1
    },
    {
        "id": "q38",
        "text": "What is the primary security vulnerability that HTTPS protects against?",
        "options": [
            "SQL injection attacks",
            "Cross-site scripting attacks",
            "Man-in-the-middle attacks",
            "Denial-of-service attacks"
        ],
        "correctAnswer": 2,
        "explanation": "HTTPS (HTTP Secure) protects against man-in-the-middle attacks by encrypting communications and authenticating the server's identity using digital certificates."
    },
    {
        "id": "q39",
        "text": "What is the main purpose of the data access layer in application architecture?",
        "options": [
            "To provide user interface components for data display",
            "To implement business rules and workflows",
            "To interface between business logic and the database",
            "To optimize network performance for data transfer"
        ],
        "correctAnswer": 2,
        "explanation": "The data access layer provides an abstraction interface between the business logic layer and the database, handling database connections, queries, and data mapping."
    },
    {
        "id": "q40",
        "text": "What is the primary benefit of using AJAX in web applications?",
        "options": [
            "It eliminates the need for server-side processing",
            "It allows asynchronous data updates without full page reloads",
            "It provides better security than traditional form submissions",
            "It reduces the need for client-side JavaScript"
        ],
        "correctAnswer": 1,
        "explanation": "AJAX enables web applications to update data asynchronously in the background without requiring full page refreshes, creating smoother user experiences."
    },
    {
        "id": "q41",
        "text": "What is the main security risk associated with using GET requests for data updates?",
        "options": [
            "GET requests are slower than POST requests",
            "GET parameters are visible in URLs and browser history",
            "GET requests cannot carry authentication tokens",
            "GET requests have size limitations for parameters"
        ],
        "correctAnswer": 1,
        "explanation": "GET requests expose parameters in URLs, browser history, and referer headers, making them vulnerable to CSRF attacks and information leakage."
    },
    {
        "id": "q42",
        "text": "What is the purpose of input validation in web applications?",
        "options": [
            "To ensure data conforms to expected formats and constraints",
            "To encrypt sensitive data before transmission",
            "To optimize database storage of user input",
            "To translate user input into multiple languages"
        ],
        "correctAnswer": 0,
        "explanation": "Input validation verifies that user-provided data meets expected formats, types, and constraints before processing, preventing various security vulnerabilities."
    },
    {
        "id": "q43",
        "text": "What is the main advantage of using stored procedures for database access?",
        "options": [
            "They execute faster than dynamic SQL queries",
            "They eliminate the need for database permissions",
            "They allow database access without network connections",
            "They make applications independent of database vendors"
        ],
        "correctAnswer": 0,
        "explanation": "Stored procedures typically execute faster than dynamic SQL because they are precompiled and stored in the database, reducing parsing and optimization overhead."
    },
    {
        "id": "q44",
        "text": "What is the purpose of parameterized queries in database applications?",
        "options": [
            "To make SQL queries more readable and maintainable",
            "To allow queries to adapt to different database schemas",
            "To prevent SQL injection by separating code from data",
            "To optimize query performance through parameter caching"
        ],
        "correctAnswer": 2,
        "explanation": "Parameterized queries separate SQL code from user input data, preventing attackers from injecting malicious SQL commands through input parameters."
    },
    {
        "id": "q45",
        "text": "What is the main benefit of using HTTPS for web applications?",
        "options": [
            "It significantly improves website loading speed",
            "It provides encryption and authentication for secure communications",
            "It reduces server load by compressing all content",
            "It enables advanced browser features not available with HTTP"
        ],
        "correctAnswer": 1,
        "explanation": "HTTPS provides encryption for data confidentiality and integrity, plus server authentication through digital certificates, protecting against eavesdropping and MITM attacks."
    },
    {
        "id": "q46",
        "text": "What is the purpose of cross-origin resource sharing (CORS) in web applications?",
        "options": [
            "To prevent websites from accessing resources from other domains",
            "To allow controlled access to resources across different domains",
            "To encrypt data shared between different websites",
            "To optimize content delivery across multiple servers"
        ],
        "correctAnswer": 1,
        "explanation": "CORS enables web applications running at one origin to access selected resources from a different origin in a controlled manner, enhancing security while maintaining functionality."
    },
    {
        "id": "q47",
        "text": "What is the main security advantage of using HTTP-only cookies?",
        "options": [
            "They encrypt cookie data for better security",
            "They prevent client-side scripts from accessing the cookies",
            "They automatically expire after a short time period",
            "They can only be used with HTTPS connections"
        ],
        "correctAnswer": 1,
        "explanation": "HTTP-only cookies are inaccessible to client-side JavaScript, protecting them from theft through XSS attacks while still being sent with HTTP requests."
    },
    {
        "id": "q48",
        "text": "What is the purpose of content security policy (CSP) in web applications?",
        "options": [
            "To ensure all website content is original and not copied",
            "To prevent unauthorized loading of external resources",
            "To optimize content delivery based on network conditions",
            "To manage user access to different content sections"
        ],
        "correctAnswer": 1,
        "explanation": "CSP helps prevent XSS attacks by restricting the sources from which resources can be loaded, limiting the impact of injected malicious scripts."
    },
    {
        "id": "q49",
        "text": "What is the main benefit of using object-relational mapping (ORM) frameworks?",
        "options": [
            "They eliminate the need for database administrators",
            "They allow developers to work with objects rather than SQL",
            "They automatically optimize all database queries",
            "They provide built-in security against SQL injection"
        ],
        "correctAnswer": 1,
        "explanation": "ORM frameworks allow developers to interact with databases using object-oriented paradigms rather than writing raw SQL, improving productivity and code maintainability."
    },
    {
        "id": "q50",
        "text": "What is the purpose of database connection pooling?",
        "options": [
            "To share database connections between multiple applications",
            "To reduce the overhead of establishing new database connections",
            "To provide load balancing across multiple database servers",
            "To encrypt database connections for better security"
        ],
        "correctAnswer": 1,
        "explanation": "Connection pooling maintains a cache of database connections that can be reused, avoiding the performance cost of repeatedly establishing new connections."
    },
    {
        "id": "q51",
        "text": "What is the main security risk of displaying detailed error messages to users?",
        "options": [
            "They consume excessive network bandwidth",
            "They may reveal sensitive system information to attackers",
            "They can confuse users and reduce usability",
            "They increase server load by generating additional logs"
        ],
        "correctAnswer": 1,
        "explanation": "Detailed error messages can expose system information, database structure, or implementation details that attackers can exploit for further attacks."
    },
    {
        "id": "q52",
        "text": "What is the purpose of using salt in password hashing?",
        "options": [
            "To make passwords more complex and harder to guess",
            "To ensure identical passwords have different hashes",
            "To slow down the hashing process for better security",
            "To make hashed passwords shorter for storage efficiency"
        ],
        "correctAnswer": 1,
        "explanation": "Salting ensures that identical passwords result in different hash values, preventing rainbow table attacks and making brute-force attacks more difficult."
    },
    {
        "id": "q53",
        "text": "What is the main advantage of using environment variables for configuration?",
        "options": [
            "They provide better performance than configuration files",
            "They keep sensitive information out of code repositories",
            "They allow configuration changes without restarting applications",
            "They enable automatic configuration across different environments"
        ],
        "correctAnswer": 1,
        "explanation": "Environment variables help keep API keys, database credentials, and other sensitive configuration data separate from application code, enhancing security."
    },
    {
        "id": "q54",
        "text": "What is the purpose of rate limiting in web applications?",
        "options": [
            "To ensure fair usage of resources among all users",
            "To prevent brute-force attacks and denial-of-service attacks",
            "To optimize server performance by limiting request processing",
            "To comply with regulatory requirements for data access"
        ],
        "correctAnswer": 1,
        "explanation": "Rate limiting protects against brute-force attacks, DoS attacks, and automated scraping by restricting the number of requests from a single source."
    },
    {
        "id": "q55",
        "text": "What is the main security benefit of using prepared statements?",
        "options": [
            "They automatically encrypt all database communications",
            "They prevent SQL injection attacks by separating code from data",
            "They provide built-in authentication for database access",
            "They optimize query performance through precompilation"
        ],
        "correctAnswer": 1,
        "explanation": "Prepared statements eliminate SQL injection vulnerabilities by treating user input as data rather than executable SQL code, regardless of its content."
    },
    {
        "id": "q56",
        "text": "What is the purpose of the same-origin policy in web browsers?",
        "options": [
            "To ensure all content comes from the same server for performance",
            "To prevent scripts from one origin from accessing resources of another origin",
            "To guarantee consistent user experience across different websites",
            "To simplify website development by limiting resource diversity"
        ],
        "correctAnswer": 1,
        "explanation": "The same-origin policy restricts how documents or scripts from one origin can interact with resources from another origin, preventing malicious cross-site interactions."
    },
    {
        "id": "q57",
        "text": "What is the main advantage of using HTTPS for all web traffic?",
        "options": [
            "It significantly improves page load times",
            "It provides end-to-end encryption for all communications",
            "It reduces server costs by compressing content",
            "It enables advanced browser features not available with HTTP"
        ],
        "correctAnswer": 1,
        "explanation": "HTTPS encrypts all data between the client and server, protecting against eavesdropping, tampering, and MITM attacks throughout the entire session."
    },
    {
        "id": "q58",
        "text": "What is the purpose of using nonces in web security?",
        "options": [
            "To provide unique identifiers for each user session",
            "To prevent replay attacks by using single-use values",
            "To encrypt sensitive data without using encryption keys",
            "To validate the integrity of transmitted data"
        ],
        "correctAnswer": 1,
        "explanation": "Nonces (number used once) are unique, single-use values that prevent replay attacks by ensuring that requests cannot be intercepted and replayed later."
    },
    {
        "id": "q59",
        "text": "What is the main benefit of using a web application firewall (WAF)?",
        "options": [
            "It accelerates web application performance through caching",
            "It provides specialized protection against web application attacks",
            "It eliminates the need for other security measures",
            "It automatically fixes vulnerabilities in application code"
        ],
        "correctAnswer": 1,
        "explanation": "WAFs provide targeted protection against common web application attacks like SQL injection, XSS, and CSRF by filtering and monitoring HTTP traffic."
    },
    {
        "id": "q60",
        "text": "Why is it important to implement both client-side and server-side validation?",
        "options": [
            "Client-side provides better performance while server-side provides better security",
            "Client-side improves user experience while server-side ensures data integrity",
            "Client-side reduces server load while server-side supports more browsers",
            "Client-side is easier to implement while server-side is more comprehensive"
        ],
        "correctAnswer": 1,
        "explanation": "Client-side validation provides immediate feedback and better user experience, while server-side validation is essential for security as client-side validation can be bypassed."
    }
]